---
import Layout from "../layouts/Layout.astro";

import Hero from "../components/Hero.astro";
import Betslip from "../components/Betslip.astro";
import Ownership from "../components/Ownership.astro";
import Trusted from "../components/Trusted.astro";
import Monkeys from "../components/Monkeys.astro";
import Mints from "../components/Mints.astro";
import Shops from "../components/Shops.astro";
import Auctions from "../components/Auctions.astro";
import TheApi from "../components/TheApi.astro"
import World from "../components/World.astro";
import Works from "../components/Works.astro";
---

<Layout>
	<section class="w-full">
		<!-- <Hero />
		<Betslip />
		<Ownership />
		<Trusted />
		<Monkeys /> 
		<Mints />
		<Shops />
		<Auctions />
		<Works />
		<TheApi />
		<World /> -->

		<div class="fade-in-section"><Hero /></div>
		<div class="fade-in-section"><Betslip /></div>
		<div class="fade-in-section"><Ownership /></div>
		<div class="fade-in-section"><Trusted /></div>
		<div class="fade-in-section"><Monkeys /> </div>
		<div class="fade-in-section"><Mints /></div>
		<div class="fade-in-section"><Shops /></div>
		<div class="fade-in-section"><Auctions /></div>
		<div class="fade-in-section"><Works /></div>
		<div class="fade-in-section"><TheApi /></div>
		<div class="fade-in-section"><World /></div>
	</section>

	<style>
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in-section {
            opacity: 0;
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        }

        .fade-in-section.visible {
            animation: fadeInUp 0.6s ease-out forwards;
        }
    </style>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const sections = document.querySelectorAll(".fade-in-section");

            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("visible");
                    }
                });
            }, { threshold: 0.3 });

            sections.forEach((section) => observer.observe(section));
        });
    </script>
</Layout>